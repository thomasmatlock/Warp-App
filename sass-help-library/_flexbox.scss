/* https: //www.w3schools.com/cssref */
/* https: //developer.mozilla.org/en-US/docs/Web/CSS/flex */


///// FLEXBOX
display: flex; // display: flex to an element turns it into a flex container. This makes it possible to align any children of that element into rows or columns. You do this by adding the flex-direction property to the parent item and setting it to row or column. 

/// 
flex-direction: row; // align the children horizontally
flex-direction: row-reverse; // align the children horizontally in reverse order
flex-direction: column; //align the children vertically
flex-direction: column-reverse; // align the children vertically in reverse order

justify-content: center; // Pack items around the center 
justify-content: start; // Pack items from the start
justify-content: end; // Pack items from the end
justify-content: flex-start; // Pack flex items from the start
justify-content: flex-end; // Pack flex items from the end
justify-content: left; // Pack items from the left
justify-content: right; // Pack items from the right

align-items: flex-start; // aligns items to the start of the flex container. For rows, this aligns items to the top of the container. For columns, this aligns items to the left of the container.
align-items: flex-end; // aligns items to the end of the flex container. For rows, this aligns items to the bottom of the container. For columns, this aligns items to the right of the container.
align-items: center; // align items to the center. For rows, this vertically aligns items (equal space above and below the items). For columns, this horizontally aligns them (equal space to the left and right of the items).
align-items: stretch; // stretch the items to fill the flex container. For example, rows items are stretched to fill the flex container top-to-bottom. This is the default value if no align-items value is specified.
align-items: baseline; // align items to their baselines. Baseline is a text concept, think of it as the line that the letters sit on.