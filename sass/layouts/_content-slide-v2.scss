.content {
    height: 100vh;
    max-width: 90%;
    margin: $nav-primary-height auto;
    background-color: #fff;
    // padding: 0 auto 5rem;
    border-radius: 6px;
    overflow: hidden;
    box-shadow: 0 2rem 6rem 0.5rem rgba(101, 90, 86, 0.2);
    background-image: linear-gradient(to right, #a1c4fd 0%, #c2e9fb 51%, #a1c4fd 100%);


    display: grid; // https://css-tricks.com/snippets/css/complete-guide-grid/

    // MEASURES WIDTH OF COLUMNS, TOP TO BOTTOM
    grid-template-rows: 10rem minmax(100rem, auto); // 10rem/100px height, but shrinks no less than 100rem, height is auto

    // FOR EXAMPPLE: grid-template-rows: 25% 100px auto; means top to bottom, 25% top row, 100px, then auto to fill in rest of available space
    /*
    You also have access to a function which can help set boundaries for otherwise flexible units.
    For example to set a column to be 1fr, but shrink no further than 200px:
    grid-template-columns: 1fr minmax(200px, 1fr);
    */

    // MEASURES WIDTH OF COLUMNS, LEFT TO RIGHT
    grid-template-columns: 1.1fr 2fr 1.1fr;
    // basically fr === fraction, this means its thirds, where center is roughly 3x the sides
    // fr units: https://css-tricks.com/introduction-fr-css-unit/
    grid-template-areas: "head head head""list recipe shopping";

    /*
    https://css-tricks.com/snippets/css/complete-guide-grid/
    .container {
  display: grid;
  grid-template-columns: 50px 50px 50px 50px;
  grid-template-rows: auto;
  grid-template-areas: 
    "header header header header"
    "main main . sidebar"
    "footer footer footer footer";
    }
    */
}

.content__list {
    list-style: none;
}

.content__link:link,
.content__link:visited {
    background-color: red;
    display: flex;
    width: 100%;
    align-items: center;
    padding: 1.5rem 3rem;
    transition: all 0.3s;
    border-right: 1px solid #fff;
    text-decoration: none;
    border-radius: 6px;
}

.content__link:hover {
    background-color: #f9f5f3;
    transform: translateY(-2px);
}