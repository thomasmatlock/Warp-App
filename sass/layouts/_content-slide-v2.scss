.content {
	// display: flex;

	height: 90vh;
	max-width: 75%;
	margin: $nav-primary-height auto;
	background-color: #fff;
	padding: 0 auto 5rem;
	border-radius: 6px;
	overflow: hidden;
	box-shadow: 0 2rem 6rem 0.5rem rgba(101, 90, 86, 0.2);
	// background-image: $color-gradient-1; 
	background-image: $color-gradient-1; // testing

	/// GRID STUFF ///
	// display: grid; // https://css-tricks.com/snippets/css/complete-guide-grid/

	// MEASURES WIDTH OF COLUMNS, TOP TO BOTTOM
	//grid-template-rows: 10rem minmax(100rem, auto); // 10rem/100px height, but shrinks no less than 100rem, height is auto

	// FOR EXAMPPLE: grid-template-rows: 25% 100px auto; means top to bottom, 25% top row, 100px, then auto to fill in rest of available space
	/*
    You also have access to a function which can help set boundaries for otherwise flexible units.
    For example to set a column to be 1fr, but shrink no further than 200px:
    grid-template-columns: 1fr minmax(200px, 1fr);
    */

	// MEASURES WIDTH OF COLUMNS, LEFT TO RIGHT
	// grid-template-columns: 1.1fr 2fr 1.1fr;
	// grid-template-areas: "head head head""list recipe shopping";
	// basically fr === fraction, this means its thirds, where center is roughly 3x the sides
	// fr units: https://css-tricks.com/introduction-fr-css-unit/

	/*
    https://css-tricks.com/snippets/css/complete-guide-grid/
    .container {
  display: grid;
  grid-template-columns: 50px 50px 50px 50px;
  grid-template-rows: auto;
  grid-template-areas: 
    "header header header header"
    "main main . sidebar"
    "footer footer footer footer";
    }
    */
}

.content__list {
	list-style: none;
	// max-height: 77rem;
	// scrollbar-width: none;
	// overflow: scroll;
	// background-color: rgb(179, 179, 179); // TESTING
	padding-top: 6.5rem;
	display: flex;
	flex-direction: column;
	justify-content: center;

	// align-items: flex-start;
}

.content__link:link,
.content__link:visited {
	background-color: #fff;
	display: flex;
	flex-direction: row;
	justify-content: start;
	align-items: center;
	height: 60px;
	width: 90%;
	align-items: center;
	// padding: 0rem 1rem;
	transition: all 0.05s;
	border-bottom: 1px solid rgb(202, 202, 202);
	text-decoration: none;
	border-radius: 3px;

	&:hover {
		background-color: #eee;
		transform: translateY(-2px);
		transform: scale(1.01);
		box-shadow: 0px 5px 10px #eee;
		z-index: 4;
	}
}



.content__link--active {
	background-color: yellow;
}

.content__list li {
	// height: 7rem;
	// display: flex;
	margin-left: 7%; // fix this, parent container needs to be centering its children not doing this lopsided off-left stuff
	// flex-direction: row;
	// justify-content: start;
	// align-items: center;
	height: 6.1rem;
}



.content__thumbnail {
	flex: 0 0 5.5rem;
	border-radius: 3px;
	// overflow: hidden;
	height: 5.5rem;
	width: 4.5rem;
	margin-right: 4rem;
	// border: solid 1px red; // TESTING
	// position: relative;
	// backface-visibility: hidden;
}

.content__thumbnail img {
	display: block;
	width: 175%;
	height: 100%;
	object-fit: cover;
	transition: all 0.3s;
}

//PARENT CONTAINER
.content__data {
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	width: 100%;
	// border: solid 2px #000; // TESTING
}

// CHILDREN 
.content__file-property {
	display: flex;
	// justify-content: center; // PRODUCTION
	justify-content: start; // TESTING
	align-items: center;
	flex: 1 3;
	color: #000;
	// padding: auto 5rem; // TESTING
	padding-left: 5rem;
	margin: auto;
	// border: dotted 1px blue; // TESTING
}



.content__data * {
	// margin-left: 5rem; // TESTING
	// border: solid 1px green; // TESTING
}

.content__data h4 {
	font-size: smaller;
	color: #000;
	font-weight: 900;
}

.content__data p {
	color: #000;
	font-size: small;
}